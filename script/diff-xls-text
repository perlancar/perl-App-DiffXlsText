#!perl

# AUTHORITY
# DATE
# DIST
# VERSION

use 5.010001;
use strict;
use warnings;
use Log::ger;
#use Log::ger::Screen;

use File::chdir;
use File::Temp qw(tempdir);
use File::Which qw(which);
use CLI::MetaUtil::Getopt::Long qw(GetOptionsCLIWrapper);
use IPC::System::Options 'system', -log=>1, -die=>1;

unless (which "xls2csv") {
    die "diff-xls-text: This tool requires xls2csv from CPAN module Spreadsheet::Read\n";
}

my @files;
Getopt::Long::Configure("gnu_getopt", "no_ignore_case", "pass_through");

my $fail;
my $opt_transpose_csv;

my $tempdir;
my %basenames;

GetOptionsCLIWrapper(
    cli => 'diff',
    add_opts => {
        'transpose-csv' => \$opt_transpose_csv,
        '<>' => sub {
            my $filename = $_[0];
            unless (-f $filename) {
                warn "diff-xls-text: No such file or not a file: '$filename'\n";
                $fail++;
                return;
            }

            if (!$tempdir) {
                $tempdir = File::Temp::tempdir(CLEANUP => !$ENV{DEBUG});
            }

            (my $basename0 = $filename) =~ s!.+/!!;
            my $basename;
            my $i = 0;
            while (1) {
                $basename = $basename0 . ($i++ ? ".$i" : "");
                last unless $basenames{ $basename }++;
            }

            mkdir "$tempdir/$basename";
            system "xls2csv", "-A", "-o", "$tempdir/$basename/workbook", $filename;
            push @CLI::MetaUtil::Getopt::Long::cli_argv, "$tempdir/$basename";

            if ($opt_transpose_csv) {
                log_trace "Transposing CSV files in $tempdir/$basename ...";
                local $CWD = "$tempdir/$basename";
                for my $file (glob "*.csv") {
                    (my $newfile = $file) =~ s/\.csv$/.transpose.csv/;
                    system({shell=>1}, "csv-transpose", $file, \">", $newfile);
                    unlink $file;
                }
            }
        },
    },
);

exit 1 if $fail;

require File::Which;
my $diff_cmd =
    $ENV{DIFF_XLS_TEXT_DIFF_CMD} //
    (File::Which::which("diffwc") ? "diffwc" : undef) // "diff";

require IPC::System::Options;
IPC::System::Options::system(
    {log=>1},
    $diff_cmd, "-ruN", @ARGV,
);

# ABSTRACT: Diff the text of two Office spreadsheets (.ods, .xls, .xlsx) as two directories of CSV files
# PODNAME:

=head1 SYNOPSIS

Use like you would use the Unix command B<diff>:

 % diff-xls-text [options] <FILE>...


=head1 DESCRIPTION

This is a wrapper for the Unix command B<diff>. It assumes that each input file
is an Office spreadsheet (.ods, .xls, or .xlsx) and tries to convert the file to
a directory of CSV files (where each CSV file is converted from a single
worksheet) using L<xls2csv>. It then passes the converted directories to C<<
diff -ruN >> command.


=head1 OPTIONS

These are options that are interpreted by B<diff-xls-text> and not passed to
B<diff>.

B<Please specify these options before file names.>

=over

=item * --transpose-csv

Transpose CSV first using L<csv-transpose> from L<App::CSVUtils>. This allows
you to do column-based instead of row-based diff.

=back


=head1 ENVIRONMENT

=head2 DEBUG

If set to true, do not cleanup temporary directories.

=head2 DIFF_XLS_TEXT_DIFF_CMD

String. Can be used to set path to diff command. The defaultl is L<diffwc> if
available in PATH, or C<diff>.


=head1 SEE ALSO

Unix command L<diff>.

L<ssdiff> from L<Spreadsheet::Read> which also diffs two spreadsheets but
presents the result differently.

L<xls2csv> from L<Spreadsheet::Read>
